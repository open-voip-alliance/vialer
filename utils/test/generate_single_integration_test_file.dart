import 'dart:io';

import 'package:dartx/dartx_io.dart';

void main() async {
  final integrationTestDirectory = Directory('integration_test/tests');

  final directories = await integrationTestDirectory.list(recursive: true);

  final generatedFile = File('android_combined_tests.g.dart')
    ..create()
    ..writeAsString('');

  return _populateFile(
    await directories
        .where((item) => item is File)
        .toList(),
    generatedFile,
  );
}

Future<void> _populateFile(List<FileSystemEntity> testFiles, File outputFile,) async {
  for(final file in testFiles) {
    final testPath = file.path;
    final testName = file.nameWithoutExtension;
    await outputFile.writeLine('import \'$testPath\' as $testName;');
  }

  await outputFile.writeLine('''
  
/// This is a generated file for running all integration tests in a single build.
/// Do not edit this file manually.''');

  await outputFile.writeLine('main() {');
  for(final file in testFiles) {
    final testName = file.nameWithoutExtension;
    await outputFile.writeLine('$testName.main();');
  }

  await outputFile.writeLine('}');
}

extension on File {
  Future<void> writeLine(String line) => writeAsString(
        '$line\n',
        mode: FileMode.append,
      );
}
