import groovy.json.JsonSlurper

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def hasBrandId = project.hasProperty('identifier')
if (!hasBrandId) {
    throw new GradleException("Brand identifier missing, probably --dart-define-from-file isn't set.")
}

def brand = [
    identifier: project.getProperty('identifier'),
    appId: project.getProperty('appId')
];

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.res.srcDirs += "src/${brand.identifier}/res"
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId brand.appId
        minSdkVersion 26
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }

    signingConfigs {
        release {
            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            }

        }
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task generateNativeValues(type:Exec) {
    workingDir '../..'

    println 'Generating native values..'
    commandLine 'sh', '-c', "dart utils/generate_native_values.dart ${brand.identifier}"
    println 'Done.'
}

preBuild.dependsOn generateNativeValues

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.play:app-update-ktx:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'com.github.LogentriesCommunity:le_android:4.1.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.compose.material:material:1.0.5'
    implementation 'androidx.compose.animation:animation:1.0.5'
    implementation 'androidx.compose.ui:ui-tooling:1.0.5'
    implementation 'com.segment.analytics.android:analytics:4.10.4'
    implementation 'io.coil-kt:coil-compose:1.4.0'
    implementation 'com.github.vestrel00.contacts-android:core:0.2.4'
    implementation 'com.google.code.gson:gson:2.9.1'
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
}

apply plugin: 'com.google.gms.google-services'