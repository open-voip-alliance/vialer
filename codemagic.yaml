custom: # Custom properties to make workflows cleaner
  scripts:
    - &use_project_build_number
      name: Use project build number
      script: |
        echo "BUILD_NR=$PROJECT_BUILD_NUMBER" >> $CM_ENV
    - &use_workflow_build_number
      name: Use workflow build number
      script: |
        echo "BUILD_NR=$BUILD_NUMBER" >> $CM_ENV
    - &verify_codebase_complies_with_analysis_rules
      name: Verifying the codebase complies with analyzation rules
      script: dart analyze . --fatal-infos --fatal-warnings
    - &set_version_for_app_store
      name: Updating version for the app store
      script: dart utils/ci/codemagic/set_version_information.dart --type appStore
    - &set_version_for_merge_request
      name: Updating version for merge requests
      script: dart utils/ci/codemagic/set_version_information.dart --type mergeRequest
    - &set_version_for_other
      name: Updating version
      script: dart utils/ci/codemagic/set_version_information.dart --type other
    - &prepare_environment_file
      name: Preparing .env file
      script: . utils/ci/codemagic/bin/prepare_environment_file.sh .env.example
    - &prepare_release_notes_from_files
      name: Preparing the release notes from the release notes on the file system
      script: dart utils/ci/codemagic/prepare_release_notes.dart
    - &track_new_version
      name: Track the release of a new version
      script: dart utils/ci/codemagic/track_new_version.dart
    - &run_code_generators
      name: Installing flutter dependencies and generating code
      script: . utils/ci/codemagic/bin/run_code_generators.sh
    - &release_to_sentry
      name: Creating a new release in Sentry
      script: . utils/ci/codemagic/bin/release_to_sentry.sh
    - &flutter_test
      name: Running unit tests
      script: flutter test
    - &build_for_android
      name: Building app bundle (.aab) and .apk for Android
      script: . utils/ci/codemagic/bin/build_for_android.sh
    - &update_ios_signing_for_current_brand
      name: Updating iOS project files to use the appropriate signing information for the current brand
      script: dart utils/ci/codemagic/update_ios_signing_for_brand.dart $IOS_TEAM_ID $BUNDLE_ID
    - &build_for_ios
      name: Building application (.ipa) for iOS
      script: . utils/ci/codemagic/bin/build_for_ios.sh
    - &prepare_environment_for_integration_testing
      name: Preparing environment for integration testing
      script: |
        export IN_TEST=true
        . utils/ci/codemagic/bin/prepare_environment_file.sh .env.test.example
    - &run_integration_tests_ios
      name: Running integration tests on iOS emulator
      script: . utils/ci/codemagic/bin/run_integration_tests_ios.sh
    - &update_gitlab_merge_request_with_build_url
      name: Updating the Merge Request in Gitlab with a link to this build
      script: |
        dart utils/ci/codemagic/update_gitlab_merge_request_with_build_link.dart \
        --merge-request-id=$GITLAB_MERGE_REQUEST_IID \
        --gitlab-api-token=$GITLAB_API_TOKEN \
        --build-number=$PROJECT_BUILD_NUMBER \
        --project-id=$FCI_PROJECT_ID \
        --build-id=$FCI_BUILD_ID
    - &set_testflight_release_notes_for_main
      name: Preparing "What to test" for TestFlight
      script: echo '[{"language":"en-US","text":"Main"},{"language":"nl-NL","text":"Main"}]' > release_notes.json
    - &call_zapier_production_build_webhook
      name: Calling our Zapier webhook to inform of a new production build
      ignore_failure: true
      script: curl "https://hooks.zapier.com/hooks/catch/1394555/blav33z?build_id=${CM_BUILD_ID}"
    - &write_dependency_trees_to_artifacts
      name: Creating dependency tree files
      script: . utils/ci/codemagic/bin/create_dependency_tree_files.sh
  config: &config # Default configuration that can be applied to all normal workflows
    max_build_duration: 90
    instance_type: mac_mini_m2
    environment: &config_environment
      flutter: 3.13.9
      # This has to be 14.2 for our integration tests to work, it should be changed to latest
      # when the tooling supports xCode 14.3.
      xcode: 14.2
      cocoapods: 1.11.3
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
  brand_config: # Specific configuration that should be applied to a workflow when building for this brand
    vialer_env_vars: &brand_config_vialer_env_vars
      BRAND: vialer
      BUNDLE_ID: "com.voipgrid.vialer"
    staging_env_vars: &brand_config_staging_env_vars
      BRAND: vialerStaging
      BUNDLE_ID: "com.voipgrid.vialer"
    voys_env_vars: &brand_config_voys_env_vars
      BRAND: voys
      BUNDLE_ID: "com.voys.app"
    verbonden_env_vars: &brand_config_verbonden_env_vars
      BRAND: verbonden
      BUNDLE_ID: "nl.verbonden.app"
    annabel_env_vars: &brand_config_annabel_env_vars
      BRAND: annabel
      BUNDLE_ID: "com.bellenmetannabel.app"
  # Production and beta environment variables.
  release_env_vars: &release_env_vars
    IOS_SIGNING_TYPE: "IOS_APP_STORE"
    ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "false"
    FINALIZE_SENTRY_RELEASE: "true"
  defaults: # Default sections that can be reused between workflows to cover common use-cases
    artifacts: &defaults_artifacts
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log

    production_trigger: &production_was_tagged
      events:
        - tag
      tag_patterns:
        - pattern: 'v*'
          include: true
        - pattern: '*beta*'
          include: false
        - pattern: '*alpha*'
          include: false
        - pattern: '*internal*'
          include: false

    beta_trigger: &beta_was_tagged
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
      tag_patterns:
        - pattern: '*beta*'
          include: true

    # We expect internal preview builds to be tagged as (e.g.) [v7.8.0-internal-preview.01],
    # however we also want to release all builds to this internal preview testing so users
    # can continue to stay enrolled and get all releases.
    internal_preview_trigger: &internal_preview_was_tagged
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
      tag_patterns:
        - pattern: '*'
          include: true

    publish_for_production: &publish_for_production
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_app_store: true
        submit_to_testflight: true
        release_type: MANUAL
        beta_groups:
          - Beta Testers
          - External Testers
        cancel_previous_submissions: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: production
        in_app_update_priority: 1

    publish_for_beta: &publish_for_beta
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Beta Testers
          - External Testers
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: beta
        in_app_update_priority: 5

    publish_for_internal_preview: &publish_for_internal_preview
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Internal Preview
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        in_app_update_priority: 5

workflows:
  main: &main_workflow
    name: main
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    triggering:
      cancel_previous_builds: true
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *set_testflight_release_notes_for_main
      - *release_to_sentry
    artifacts: *defaults_artifacts

  release-candidate:
    name: Release Candidate
    <<: *main_workflow
    environment:
      groups:
        - configuration
        - diagnostics
        - production_and_release_candidate
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    triggering:
      events:
        - push
      branch_patterns:
        # Only matching actual release branches.
        - pattern: "release/v*(0|1|2|3|4|5|6|7|8|9|.)"
    when:
      changeset:
        # So we avoid triggering new RCs when release notes are added
        includes:
          - 'lib/**'
          - 'android/**'
          - 'ios/**'
          - 'pubspec.yaml'
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *set_testflight_release_notes_for_main
      - *release_to_sentry
    publishing:
      slack:
        channel: '#vialer_mobile_release_candidates'
        notify_on_build_start: false
        notify:
          success: true
          failure: false

  # Dumps a build into #vialer_mobile_last_published_build so QA can test new release candidates
  # against it.
  last-published:
    name: Create last published build
    <<: *main_workflow
    environment:
      groups:
        - configuration
        - diagnostics
        - production_and_release_candidate
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    triggering: *production_was_tagged
    publishing:
      slack:
        channel: '#vialer_mobile_last_published_build'
        notify_on_build_start: false
        notify:
          success: true
          failure: false

  # Run automatically via `.gitlab-ci.yml`
  gitlab-ci-merge-train:
    name: Gitlab CI Merge Train
    <<: *main_workflow
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_merge_request
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *update_ios_signing_for_current_brand
      - *prepare_environment_for_integration_testing
      - *build_for_ios
      - *run_integration_tests_ios
      - *build_for_android
      - *release_to_sentry
    triggering:
      events: [ ]

  # Run automatically via `.gitlab-ci.yml`
  gitlab-ci-merge-request:
    name: Gitlab CI Merge Request
    <<: *main_workflow
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_merge_request
      - *update_gitlab_merge_request_with_build_url
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *update_gitlab_merge_request_with_build_url
      - *release_to_sentry
    triggering:
      events: [ ]
    publishing:
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: false
        notify:
          failure: true

  run-integration-tests:
    name: Run Integration Tests
    <<: *main_workflow
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *update_ios_signing_for_current_brand
      - *prepare_environment_for_integration_testing
      - *build_for_ios
      - *run_integration_tests_ios
    triggering:
      events: [ ]

  staging:
    name: Staging
    <<: *main_workflow
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_staging_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    publishing:
      slack:
        channel: '#vialer_mobile_staging_builds'
        notify_on_build_start: false
        notify:
          success: true
          failure: true

  production-vialer: &production_workflow
    name: Release Vialer to Production
    <<: *config
    environment:
      groups:
        - configuration
        - production_diagnostics
        - production_and_release_candidate
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_vialer_env_vars
    triggering: *production_was_tagged
    artifacts: *defaults_artifacts
    scripts:
      - *use_project_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_app_store
      - *verify_codebase_complies_with_analysis_rules
      - *prepare_release_notes_from_files
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *release_to_sentry
      - *track_new_version
      - *call_zapier_production_build_webhook
    publishing: *publish_for_production

  production-voys:
    name: Release Voys to Production
    <<: *production_workflow
    environment:
      groups:
        - configuration
        - production_diagnostics
        - production_and_release_candidate
        - voys_android_firebase
        - voys_playstore_credentials
        - voys_upload_keystore_credentials
        - voys_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_voys_env_vars

  production-verbonden:
    name: Release Verbonden to Production
    <<: *production_workflow
    environment:
      groups:
        - configuration
        - production_diagnostics
        - production_and_release_candidate
        - verbonden_android_firebase
        - verbonden_playstore_credentials
        - verbonden_upload_keystore_credentials
        - verbonden_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_verbonden_env_vars

  production-annabel:
    name: Release ANNAbel to Production
    <<: *production_workflow
    environment:
      groups:
        - configuration
        - production_diagnostics
        - production_and_release_candidate
        - annabel_android_firebase
        - annabel_playstore_credentials
        - annabel_upload_keystore_credentials
        - annabel_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_annabel_env_vars

  beta-vialer: &beta_workflow
    name: Vialer Beta
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_STORE"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "false"
        FINALIZE_SENTRY_RELEASE: "true"
    artifacts: *defaults_artifacts
    triggering: *beta_was_tagged
    scripts:
      - *use_project_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_app_store
      - *verify_codebase_complies_with_analysis_rules
      - *prepare_release_notes_from_files
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *release_to_sentry
    publishing: *publish_for_beta

  beta-voys:
    name: Voys Beta
    <<: *beta_workflow
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
        - voys_playstore_credentials
        - voys_upload_keystore_credentials
        - voys_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_voys_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_STORE"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "false"
        FINALIZE_SENTRY_RELEASE: "true"

  beta-verbonden:
    name: Verbonden Beta
    <<: *beta_workflow
    environment:
      groups:
        - configuration
        - diagnostics
        - verbonden_android_firebase
        - verbonden_playstore_credentials
        - verbonden_upload_keystore_credentials
        - verbonden_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_verbonden_env_vars

  beta-annabel:
    name: ANNAbel Beta
    <<: *beta_workflow
    environment:
      groups:
        - configuration
        - diagnostics
        - annabel_android_firebase
        - annabel_playstore_credentials
        - annabel_upload_keystore_credentials
        - annabel_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_annabel_env_vars

  internal-preview-vialer:
    name: Internal Preview (Vialer)
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_STORE"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "false"
        FINALIZE_SENTRY_RELEASE: "true"
    artifacts: *defaults_artifacts
    triggering: *internal_preview_was_tagged
    scripts:
      - *use_project_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_app_store
      - *verify_codebase_complies_with_analysis_rules
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *release_to_sentry
    publishing: *publish_for_internal_preview

  # Generate production .aab/.ipa files, these are for manually uploading.
  production-artifacts-vialer:
    name: Generate Vialer production artifacts for manual upload
    <<: *config
    environment:
      groups:
        - configuration
        - production_diagnostics
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *release_env_vars
        <<: *brand_config_vialer_env_vars
    artifacts: *defaults_artifacts
    scripts:
      - *use_project_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_app_store
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      #- *update_ios_signing_for_current_brand
      #- *build_ipa
    publishing: { }

  main-voys:
    name: Build a version of the app with Voys theming
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
        - voys_upload_keystore_credentials
        - voys_playstore_credentials
        - voys_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_voys_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *set_testflight_release_notes_for_main
      - *release_to_sentry
    artifacts: *defaults_artifacts

  main-verbonden:
    name: Build a version of the app with Verbonden theming
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - verbonden_android_firebase
        - verbonden_upload_keystore_credentials
        - verbonden_playstore_credentials
        - verbonden_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_verbonden_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *set_testflight_release_notes_for_main
      - *release_to_sentry
    artifacts: *defaults_artifacts

  main-annabel:
    name: Build a version of the app with Annabel theming
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - annabel_android_firebase
        - annabel_upload_keystore_credentials
        - annabel_playstore_credentials
        - annabel_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_annabel_env_vars
        IOS_SIGNING_TYPE: "IOS_APP_DEVELOPMENT"
        ENABLE_IOS_SANDBOX_PUSH_NOTIFICATIONS: "true"
        FINALIZE_SENTRY_RELEASE: "false"
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *verify_codebase_complies_with_analysis_rules
      - *flutter_test
      - *build_for_android
      - *update_ios_signing_for_current_brand
      - *build_for_ios
      - *set_testflight_release_notes_for_main
      - *release_to_sentry
    artifacts: *defaults_artifacts

  # Creates files with dependency trees in the output artifacts for this workflow. This is just
  # a convenient way to access them rather than doing it locally.
  dependency-tree:
    name: Dependency Tree
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_upload_keystore_credentials
        - vialer_playstore_credentials
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
        FINALIZE_SENTRY_RELEASE: "false"
    scripts:
      - *use_workflow_build_number
      - *prepare_environment_file
      - *run_code_generators
      - *set_version_for_other
      - *build_for_android
      - *write_dependency_trees_to_artifacts
    artifacts:
      - dependency_tree/flutter.txt
      - dependency_tree/android.txt
      - dependency_tree/combined.txt