shared: # Custom properties to make workflows cleaner
  private_keys:
    voys:
      android_signing: &private_keys_voys_android_signing
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZxX25Lc0RRV2pEcU5XYTRQdUFhRDF0dVhydXJVMEg5RmFMX1pWTGVQaUxIR2hEd3dtQUN0SGE5aF9Jbml6bFZRM3I4T3phLU9GUWtQODNvZ0h4cnhDNm9CUHROaDBlZVphejFjVmtlZnJDeUY3Rms9)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmZxX25Lb0dTYVVFMlJubVJrTXA4a0hiczhzeHpnUlhVWktFbllLNWF2OFlsTlQ5dzgzUWFiaU1idTRJN1ZDWkxtR1VCMjFjUGt4QUNkNzZsazE3UU16a2NMbGt3eVhibHB5SHlSZmlyZzVQbl9lWlU9)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmZxX25LTW5Oc0JlUi14aVZ0Z1VOX0p0SE1WU2JXTEx2NEpYeHJMdUtKd0xTZnhTRkZUaUVqNkgwdGY4R0hmdGlZZkY4dGZWX1k0S2hKQmVlRjl1cm93WXpwRFE9PQ==)
        FCI_KEYSTORE_FILE: Encrypted(Z0FBQUFBQmZxX25LMU9PQXU1bVJhbW5RLXpHQjVZZTJ1cUxfTGtkSDlUM1dDekk5RVdWVkltNmYyY0J6UlN3YVhrRkRJaGVKOW92YU9GeXJiOW1BRlc3c3F0QXItbTNMeG5zS1RCOFYtdzAzQ3lJbUFmbFRDQW5ISV9IV1I5dkNqc1EyTmNjX1dSQ0NQOUowQmpKZGRRVTItOUZHRXItMC1MbUI3OGpxZVJUOXdOX2I5N3dwWlBLdVpZb3h0N0VReHRiSlVrcU12aWsxeUdmV3NVUUJJM1d1ZktkWTQ1alFBYWw2cEZ2c2xLSnVGR1V3cGNObW9LaEVsWFc2U3JjSi0yV3BJdnpQN0VReGZFbEtIb1ZienN4M3F5RkFqXzBReTJLZUhmWkNNRGprS2tlcU9oZU83cDE4WF9zblJLajdTbzZla1htaWFKZzhIN3RvZHBZcTB0cll5QnBDbHFHc2tjc1BoalNMWWVjbWR0MnZaQ3hKREM2SkZfNk9BbWFvMEdPYlNGMUZKakp4YmhGb3FKeG9jZkV1ZU5mZ3dsWlBSOTEyNTMtWFNZRDRZV2Uzcm5UWmw0TkM1VTBCczhuQk5BbXJhR2M5NUltVHRUZHp1MVZOeklYMUlaME9TVGszdHZHZ1JXQUk2T0QySFBYdXpOY1c4WV9rWmVNY2lTeGdJSmdRM1ljLWJPN0o5LVdHQTBpRTlHSkhCZmlpeDdlSjJCSDhLZkttYmp0NTBXazZmOUJZUmFnVHBJMzl0Qkx5TWdEdzlrZ1dEMXlyVHdieF8zeHA1QXRzaE5DZTM5eVVlQ1QxZllybk1VTWxDS3kzaEFoWTIxUmR2Q2pOc25LYnYzUmNTU2RJYm1mSjdhQWNCeGhtbDQxV1ZKMXZ4bnhmQmRrQUlwcjU3S3pSejM5UjlMTVM1eHpXSmVrU0Y2aEUyT2ZKTG5VbEhuMktPYTR3MTJDV2dzQ1YzTVhhanM0RW5PRWVQakc2ZkNOZm9QWFF5UmExc2VFT2xGNHZrN0FTb1pZY3lQSDFTLTJQajNmTFdiRTZmZ2RJQkp5U3FYWEt1a3FtTFBFdVNlLU1wYlNrUW1NYUtiUlRldUNPTmJQRnFIbDhsNWNCaFp4U0hNQ2xtQ2hla3QxTEtEdHRuMG1pMnA4NXg2Q0Uwb2UzaWRucm1nQ2lpVWZrTU1aLTJVQklNTkZSbWRuNExOeWJscWZ6dml2cEsyN0hLZ3J0SXdhcXVqZEpsVmxlNy15U3lzbVdZajJ4bjA2cTlhSWJ2alhPaUkyUjY1QU9OdVdyeHNaUUI1N05icG1zeUdCOGhKMFN3RWJNamd2aDQ3NEtsakN1WjNVVXJ5Z0dkUUYxZUFHakRua0h4UUp1WkFfUGROcWo5TXBRUWQycHJoUE1BeEFrOFotUXdoMlpfUWNwU016RTdlaTIwUEcyMzFfU2ZPMzFtUzRlRHhDNWFrSVdrSGttOXJ6M0ZoRU00QVBnYXJJMG5ubG9Ia0lha29hOU1HTDRIc0FJSDFoWnIwWkwtLWhRbHJuaUlpV0dFWFFNT2REOW9lMVZCNDF3NHhRRl9RUUhReG5KaVFOVUt3TkI3eUNieDNQZEJFNk1mLXhvZUpTaGw5aThxWl9XZlYyTTRpNkowM1BvOGV3RUdfekZJVktKQlV0R3p3bmRsQkQyT0ZCelVYUVJTMXg2ZWJGNTB3c3FheG5CbUU5MHloaTNxWkJVdktjZTJmSjdxekhpTFlLanJiSE9GaUFoak5IS2doV2tpRi1ZdzBiVmQwVUlaanZfNW5ZWnE4YXBCRTdsRmEwdG94WHhrSEoxYkNzaTA5Y0dYb3VHVWMtbGFMSVJibV9XN2ZHc1BNWlYyMk1nY3RDeDNHWWhFRUZZb1FzOGpXS21zVmtZZ0tZWXFEN0JGNmZNaWo4SHAyWl9xR05salJOaUlFR2lRNUZlSDRNalFldkZCaDFiMHVsaUE4dDRtQjZzZVF2cGZ6eWpQd1gwQVloelZaRm9fS0M2YlhwbXBPaDIzckZNMkROVGNTSUtYbDNpY0t0SUN5U2VTWUpYSWRKckRkTl9YcEczZ1FtYkFkY3A2RGxwRXpRczBTOXlyUHVBd3NMWmNHc1NuVm41eXQ0SXRqeGpUSEpTX01WV1JwdTh3MkRzbldTcGIzOVgtWEg1TUtLV2d1d3pXTnhJYUEtZzRTTDM1aGpnVDlLeFRRNE96UHpJbV8zN19aZ08zTXdTUlF5RFR4emtfczhnaHVVREs5R2x0WFhROTRVTWdteGItZmt4WGlBQ2RhdEt1Ukx3bmRHOHVxS252bEY5aWNobnUwM0E0d1JZZ3k3WGZlZDlES0Z6NmV3cllQS3JXR015QWR3Y3hQT0RtZUVfOF9Tck8wOGxWYy1NYXBBTDNxVEhBYWpGbDZFdTg0R3BXVHBVN0xaOW9FOTVuWVh4SjZGMktIeXdtVkJ2eFRNUk9JSnh6ZUVLcVJkVVlubDk5WnlqazZPMTRvOTBlZFpfdUltSTI5cHpueVRUNWh2S3pyWHBMNTExNDlTSWJlbEJxSnlERWVBcHZlWF9wMWl1Y1ZUVlRIeWdiWG1Tc1gtUGVMa2FKRm9jeXZDUWN1UXVHOVQwTkxPSXg0eXVsdmkxdUE2cjNjQVAzRHhrM3NvWm5wQUFjaFJHQ1Bzc2QtOG1yMkotNzlXb2dKT2xmSndYMExGNXdfendfcTI4MGc2UENHU3drLUN5MVR3R0x1alVON3ExTFdBZTJpRlRNZmVrbWo3TWkwZHUtZ0NqTEw1RzV1UkI0eGZ0cWZzZHZxUGpPYklkN1prNVNlUHIycXg1WmFMTEx6SmhUUV90UU9wMl9Dci1zdmRORnBweE1QYm5Ba3lZeXpobnZoQmpGZjNaTWU3QjRJMzF1U3VpUzVqSy1HM1FjNm1uLURpRWpiaUZhaE5zVU9HZWtGZjRGMkJnN08xN2pjVjVTQnN1eWZuYkNLY2ZQTHhxSEsyMFpPMXVOTGdEZWZNZ3pWQ0xQN0ZKV3JHVXZkZnNHMG9ZdFBGbGt2WEQ1UDIyUEtINjJ5TGlteDctd09TVHVMNVEwUEh4T0RlR3Q2eUlDWklXdGhlRG5wOVpZVVFwMnN4RkdLeURUS19zakJjR0JpbzY4VTJicG5taU9TSzNScmtlZXpTaDlQZVJwTDRnVUItZTlVU0I2UEhzOHJkdkIwSEZILVRJOUlTbnE0YkMxMW1WVWdvb3BsRVdhY3hNdHhpM2pXeWZwRWJhSVhKR3VOa3VvbW5yaEFPc3JObkhGRmFOc00wOXlnMlZIQ1d1UmE1bEhfUWEtcU9rNFRQUUtjRTFjWEZkVV8wYnlXMVVKXzRmc3JGaW1kUXFzT0VUdFJ5STZHM09zd3VSYkExRlMxTEtxdmttTWpKazJsMFdES3VVU3pDTnlia0tYMXp5blJiTnJWbHU2ZXRkWTNqRWJSR1hNZkozYXEyVDYxRUFseGtBUXI0eFpZeUY2Vk1JLVlWNmlJZGllT0lDdG9FMk5MYkljODNsa291MTNZMkMzczVKM0tCb3JRMGxqQU4xQWd6d0dJTFJabEp4NFZuWXlRVWliU2gwWDRRRkhGRnoySW5xTmNZOXA1eVgta29LVWwzUWdQNUlFMTBUb2hhRUVoZFpZLVEtZXF1NEp6UkJoanFkRTYyN0JfaXBmN0xGNmdPMVRCRXF1aE0wX1NkMGpGVlVFb2FDMFJEMjNfWmpfeUNFbEJnLTNqbHk1ME5sb2V0aE92WFoxVUR4ZUw1Xy1uWmstQ3NhUWJlVWR5bE41eHUyUkZpMkVRSjdYdmI1R2dYaWpCTU10YmlidmxCREVtWDhDdG1wRkNXYmZxdUYxYzN2WFFndWdNbHBrQkFtVFhka1JsLTZUS181ajduek5CNkRjMUxvVEtCWWFmTVUwemlQTDRvTEVic2U5ZDBXd2pJTWFnSWoyd2Y4YXZzaHIyekZrdE5BUTh4MUEzTlh0bWx6M3BDVFBES0R1bFBxaTdhWU5IYzVrZEFDb04wQWNKQjM2UEV1YVRtZ3ROZ3lPVjdDeXJVS1F6VzFHYnJCRV9LTHdONzhvQ1FrSkFYX1FTZXJOSzY1c0dTVThQeklCajFHVnNMalpLeG9zYm9JaUs2WFpPX3JNeHFoZUN3YnMwVk5wdHFGSHRMb2dNZHFfdmU3V3I3eFlmVFU3TzB5MU5sT1FNajczOGxGTW56aklRT2pCYUx3U0NrM0NqLW9XMENOeDdxSnZjVXlrS1hJeHUtTVhPN25rcXRTbXFYSFFteTcwOGVfYnpnWWJPZWpBU3h3TjZLdk93aEZDb2xVb2cwOUVhNy1iYmJuR1VuZHZob19ZZXdxSWx4WHpHcDVvSWo1ZTB4LVFUdDQ3WGVwamRkOHdGQWMzV25YeVhBaU0wMk14ZmFoMlQwU25zRkhxUF82TFpUck5XSWx0eDVYU0ZPZ1U3Q2NobWhmNHBUWGJIaVViS29xUmhFUjNfTXN3N1p1TmFOUjJmN2ktSU5JNW1lOXlacXRqOTV4cndBT2VwZzhOTEZobFpuX293Rml6UHRqT0JLeGlEWmlHX3RaU3dRWkR0WGdGU0NXUk1VazE3RVN6WU5JWUtPQndEalFRc3BZaWhQRGxnY0xsSWFiLVFuTUhkeDE5OVF0a2FYYWh5VTZLakFXZlhiSVU4OFVQY0ozZk5BM2xCaEgwbW9hdGt0NUxFeGlpeUZ4ZHRpb3JFRmF4SmtNLXZuQUljREZYX1hLZHZ1bU9weTZ6Q3RPUmxCeTdkLU5oTGVZbVgyY2lvMzRWRnBzWlNjQWdTbGRXZmNPSUI5MUNuVVN4NF9rXzJxVnNjRlBsZDAxME9YVVpVTWNfUGxqdmhGZTRwT2NUVE9kSllBbU1oYTVkUFZHa2V6RnAybTJOYzc1UU8tOTh6N1FfTlFVUE9IMFVxalN1WElMM0JNNTRVMGJXZzh4S01FSE4wc0VwUElxd29ZMHQ3QnBDX3lSMEhxVVBxQUV0NFNJV005UHVvY0JkNXRkZEJEMkNPVVVLRlYtUFdvN1JlV2JlZ1psMWwyalQ2dVR1QV9LX21XNE8xdHFvYlpibzEyUktYVDVNXzNUc1JxZDZmYzF4SGlaUzVCU1AyRTViNUUtVVBmbWxEcENmQUVCS1ZIanh2X3hfOGxKbkNab0o4RV9KeWVNamNOM1U3aHlBQTFBWUNjMUc3dUhJaExKTnBEZm5YOWs0M1VIRU94ZFFyVjg2dGtud1JBSEM3NXNXOEgtT1JSWm1YZHJsUV9rcDZzcFJtakxoSDF3SmdhMlFwQ2JhY0hhakNLVU85ZC1oY0czcVFMY0tnUDVVMlQtYWNKUk9GeTR6SmRiZ1pGcE44Y2JoUURaWlRnNEQ4cV84T3dsb2VKS1RzQTh4Zz09)
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmZxX25LVVpqekJESFQxS1R5UDZ0OFlyYmg4MnU3cnNGamp3Nll4UjdDbFJxbDZWS1puZHFkRm1yTGszWHVraGQ1X3hJYTNxSUNfQjI0UkpweWJGcHBQc0N3eTNuWUgtWDJrdC1BTHhyR1puenNsNVVQRnBkZXJNMGFXcEkyWGUyOHhCblZyendrYUg0NHlFdVhlUEMxLURaOXY3V3JRU3VPMXdud1drNU1YNUU5X0dmeE0tc0x1TzFVWUlzSDNiU2h3bll4UDNISTAwMDBnVEpMbVRXWnB5T3NHdVFCX05LUzVmRFNIMkFYZDBtMWN6NnV3VUlUYlRFTGdIemJCWkswOV91ZzFQbk04eUZnQ1NzLUk2MU95RThNbGJxRWV0OVJ3M0t4SjdSY1FkTTJHRUhNT1NJcGpFdmJUY1NzMnFsNnFWMnUwOHBmaVphRUpNWmoyQUE0cEFnQ3ZUWFpkM0swVDk5Z2Nnc2ZPRTltZEszM1I1SjdHTWVoX0x6OE1HOVRLWEJYWnB0UW9GS1FjR1VnZWpPcjU4RWRBRlBVYlZ6cFJ2MGxkbUZJOEw5QVlWVElUQUlBRFJIR1VNMVBzZjV6VXQ2dFM2SHVaTDZJMTV5T25veVhqb0lMZlgtOHJSRWM0LWc0SG9DVjdiTTkybnpqdmhRTHM2RElGa2NOWVRycDNHT3Z3d0dROHczSFZpc09nX1dfaU5QVjcyaGFnT2pwZ3BoMFFNZUg3OEo1d0lVWFJVaTRFVjd2WTlVZHhqZkd6SFh0TTdNakJtakxoN3FFTFpZeUEwd2R2Tl9OZzgzTWxBN2gzeFZJTjNNc3V1WXdqYVpFcXgtVXpGZ3owRkZrRmFsYmdlczVjdVF4M2UyT2dJWjlFXy1hRzFHVnJzU0xfVzZ5V24yOFlfSk9tNmQyem1CQUpXTEo3enBmXzQtSkFOdnF6ckR0OWVOc2VZSGpzQ0ZuTER5SnBONG8xUXBxaGU2LW0xR0g2NDI2cjhTS0ZJdElURGR6R0FtQWsxdnhGa3RYUW0wN0oyNS1LRGFwUzNwNExMVHhKZUY5cFZFbER1ZmhNZkdtRmdVRVUydUhZUVhQYTU5QzFLWkVJM2dJRzlwODJJT0NsellySURfTEFZV05kTk9GaTJtY2JteEVfSHFKelVLX3FLRXUxTVVPaHRKblBNNGZaX0E4VXlrU0dtMUtOZ0NvZWVFcVRVQ2VPQmtVRTFua0RCMUJqaV9LUV8zeng2NXh5SFdaQ1BYTmhwUEhKd3BQbGliTmRPUGx0M21MTnlrUHZCelk5QkhHVWRjc2szakpMblA3STBZTDdnRGN4S1BtMVhrRTJWZkVZN3p1SFlNVjFXMmNucDZMUE0xWWRxM0w1dVBjSC0xeEdmUHc1b3F0RTBPRGZTX05QWTN0bmRJR05DNVRVSzl6UElhSTVEQWNXMG1TT25RVU05SVNKX1pqSHZxRFVzeUo0UEhtMko0bVBpV2ZIdkFzNE5HanA0UWpDQ0xURlExeGtCNWstalQwZVB2QURnYko3R2JZeVIwNXdMbk41cTEwOFNOcUJnTXduZ1NLaU9LWnpPcmJaTjl5QVRPTkU4a1ZRM2Y3Y0h3Q0ZGVjFGci14NFFwRVF5VGgtYno3dFdHMjNHVHZteG92NDdYM1BxUHZCQml5VFZJNGpFbExYQmlYbTZ6U0dSaGRRWFFub0ZVNmFpdXJJY0dSNDVBV19YTkNaNng5UGpjUjZTaV9qM3VYaDg5cEhEa2JNZVVKV0ZWdlFSUnlud3RfMVRFc3pkeHM4SWVSS3ZvbnA5MEl3Wm1UOUZqcUFOcG1XX0p6YVQwWENZbnU1dW9tc3RyWU8tc2tzQno3MVo4aFVwTWhZTTJtZW13V2JZVFRQcTFKMDBHNDc3VkJNNDlxV3V4NVNQVTB3R2VsdHVfR1M2amJ4bkJmbk5DRElJUC1YYjR6SUVKNFExbTc2WnFvZE4tN3p6ZlNQcUM0UUwyT0dPMkFwRFR2cGFtTmZKdlR1ejdmSFI4M2tvVWFkSkQ0cEQyM2xBZnNyeENiTmJyNXdWbmk0c0tZRkVxODJaaG8tdU5tbEE2Qy1CVVJoVFZaLTFwOU16SEhFN0JPcGVLNVIxN3B2bS1iYl8xWk1VWmdxNEJBZWpwem1NYWM3UVZOdTBTS2pfblVGWXRoMUdyemh1N0VOMC1xcjdVYVcxV0R0STZMdXFtNDV3UXVXaUtHdjh5bFBMay1hOHVLZEI0dV9yRG1TakxEQ2RvcHcxbDNoZVF6T3ZlNUdOSkdkRko3MEpIMmRvdzFXRmJnWEFPWDhfMGJRbUtjNV9HN1EtcEZ1d1FpN2ZDU3RXaTlSWlN2YXdOajJVcVMtUzNPNzhTWVF1bE5RWHZ6Wm13OU9pWENlRTBDUnA4VWthd3pja1lBZWF2RThZeDZ2bHQzTjdleGlJSS1xX0JWNXA3WUYxRGw5Y0NYNERhVVAzaHZnb2xDU3pLbFNSTFBPQmpWc3hVX1FxZ05KT29hWEc0TENDaVpqWVczQnBFQW9VSEJUd1Y0RFZzUlRiVlhLOXBGaEFHY2JsR2JtLS1LQm1sSDRZWTR6RDFxcThnOERqajVVaGhfbVZBakNFdlM3Tk1JTUJzVHpMdTZaWE5wREJvZ2gwX1FOdFV3MnpIOUhUQXJjQzkwME5CVnI5MUF4a0tVcWhJc0lrbldFdGFIcEpFY1dvSmhSZHpZdzI5XzFoeHhHZF9iNF9md0V4TEZUV1pXNkxWVlRJSjAzZlJKZlBna3Q2cV9vRE5ULWpTWUF5QVlYT3JyMzB4LWROVFBIS25xc3Ffd3FsSXkwdUQtX0FncG9Bc1kwQlN3RXRRdEV2RjFYZWpQOEUyWjgxdHMwNFlma01rWFRCUDNCSHR5Vy0yeFJyQzNYTXYzSjByZ3ZtLU0tT0xndXZiZDhVdi02VDhHeU1oZ2owT3ZGUHF3QnFoZjRXWGhlanhUM08xbGdJMDFNZVc1X3doZFB0alIwbGpiV3gweV9ubkwzcnBsekJtREdrZ0J5N3Z6Rmc5SU9XM2xlSnk1QmVDUWwyUjN4RlRnMWxvTFBwNVppeG9nUm05bGJNYnI4eC1ReVF3TmV5Vms4aFJRUC1ESTZoNVMxNHV1LXR6QTh5enF3SFhrdmo0dG1NLXJuNUdfdUdObjJYbE5keDNndHZPTG1IQThjUW8tZ2tZMFE4REVwVFI5cmxKSlo1R2JmX0lkMVdqNjVLSlg1c2xuNmFEbFdEVTd5a2NQQzVXN0NhWUphUXpHNWF2dzIyQlNBQWZjQ1pTRWdlVERUT1JmSnNEZUp4a0E0NDVGQmJ0a3VSSzFvRk13MGNPSzVmNldpV0ZEM2dvS2ppaUJRV2Fld1I1R29oeEJGdHB2V0o2OHVDSTB5UExFaXFILVhPUlROaFpXVUlVNHRhVWhTWnZsODBaU1VyMUZPdm0teXR6ajJ2UDRIVTlMeGpyRGRCYmZnRXpKUGEzQkJvcUFjZW5QLTVWVW5ZTHFIekdUQUl1MFlLdjNiNkdsN2t4R1FZY2Y5S042azZWamctcy1pRi1faXkzMjJ0Zjg1X0hYNUt5UkVFSDhOeGFIbTNZTFNSY2taNk90VEhxM0FwamR0VEJJNkZZdzVaMW90UzFiRWhHMFhsM0ZUNmZoVTFUZldvejNfRkZ3NUpzdEhVZWYySXRYaWwzLVVGOXl3UFp4VDFPU0Q4cWZvYWRveWwyVHg1Mk42TWdLSV9jdV9TWmRFZkxDYUtfYmhDV25tY0o5cS1PY09UcjIyNDNVZ1RfUUVaTG5zVGJMVUdGZmlmNm5vNVluWWVkbTB1T21Ec05FYnZUem5tcmFYQi00X1ZPQTA5clVkbzRpSGlYNmVncG51QVpaU1dOVW0tdENVcEVBM09nWlIxTVBkMEczczQwcmg3T3Rkby0xRVd6Sll0N3dwQm00UmdaMHBEQ3c1Z3U3eUV2SWFEMlEtZVl5M3FoOEZDMkVMdkwtcWR4dkJGTjZlRGZXZWd4TFRLUllTZndZX1lOZ0xnem9oR01pT2QwNWpfVHYzMjhydTl1TVBPUmN5VkdOV2pNZkZ3dUpQVkJRdzNodzF1ZXpaLWtCV2N0X1ZianlKYXZwb1ZDODJNdklLN1FSZ0JjajE5ZE11dFJRbl9BYjVBWm5iVFBlQURudFJiM2JvN0d6clpXZ0pFMm13TFQ1QjhxYkkzNDdtaHpiMV92OUlFX1FaeGpZNDhmYXVPVlAyZDZEbTMxemY3UVpEN1lGaEU4MlpUenpfNGxYR2QtaHNzZVdwVFBNWl9tbE9BSThLQ0NrVDJEd1RQMEF4emdtTVl4TllLUDVmdnRlNk5NUzZOcWRUbXFMSHJ1TVhiZnEzUGM1NkN3UUg5aVQxWWZ0eFg4ZWJMaDZYRVd2d2lLSHZFcGp0S1RsRjUxSjBQVkRWSExRNE1ma0hwcWtYYVlSNXdSWnRSRnRodVhMNUQ0aUphQmF4YkJIazliVTVUd2Z3alktei16R1ZJVnoybXRKd0tUcDJPRUtuSTB3VnNjWEZieUVuS3g1R3B2cFNmTUFyWUhCbXJzSDlWMkJFb0s2cUJJcUZ2eWpMNkhjcW5XRXFuMWlJLTl4c1lLWVVVYkU3UllYOVVNS0xfR2JDZjRGcEswMUgzbUVvaTNfdzB0SDlSZDFONlU5VW9GNUhPRVF5Q0drWXo5RjVxWFRxaEZaU2JlNFoxWjBfdU5OS0ZmNnhwWWFxWmVfdjZkOFpXZmVXZlVHYWxxZ1ZOV2w1LVNFaFA5YzhnWWN0c21HbU5zb1NGZEl5SzlzSGZGTzhoSlh4YWxHVVVKb0hJZEZLZXJBbk1qWm9XaUFRS18xY2ROZlc1X293SHA5aGZJcHJkVVp0SGhObDZrNzMxR3lYZWVsLUtaUGFHSVNLYnpZeXExeThOYzMzNTdKOUFJN0RFbXBVSjFZcnJQRkVkTS1jNXBPeXVkQUtWMHZTc090V1VrRERLQUdKaVdSdXNoQkZjNHpZZ29PcnlhWXpjUnNodEcxTFktT2c0S2dmWVk5TlZFamlRaHpUVDRPc2ZtSEpQbi02MnJPemNWRHZYTlpLUXlPTk5nM1piU0dhSHdhYS04d1dHQjk0LUwzeDBsQWJrZEViX3hkSkoxbWNFbjMxdE1US2t4T3JtUjNzQ20xWURpMW1nN3E4ajFlWUtBSkNPSUxPQzZlekQ2WnNyb3RaOUtadHU2N3dqYjBFc2Y2Vkh0SkJJTGcwWUNXU1lIelBwRV9aQzExSUNyQ2pybHBKVVJOcWJVUFpfU0dVNXdhWDl1UHd2bEpvNTgzWTVQMGtLTVFFbXpoTjZjVFZvbGVadW1IVnVPRm9YUnN6dnkwOHlpbndmQWtDdGpybC1QNUtQdUR6dz09)
        FCI_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZxX25LY2JSdy1QUlBmTUFRc3dtSUEwZy1QT1JPd1ZxREtJMXFZX0dTeFBoLTFqSHRWaHNVZjdpZzBxdWtmMXNqZTNLQnBHRFZVRW1FdWZZbXFmQmxacTdEVEdyYVZRMHg1UWxXdEo4Sno3N0ZaMkE9)
        FCI_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZxX25LUmgzWjdNa0ZnWFRtSUc1WEhCWUJKQzNCYy1VNGdIUWowbmFCRzNsRDV1MEJaOGRybDdPR09PTi1PX3gxRHo0Q1B6U29OTnV5WVdjQ1lRRU4tWFc0Snc9PQ==)
    vialer:
      android_signing: &private_keys_vialer_android_signing
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmctQzVJRkRRaF9YV3FlQTdQSU9Na1ZoZzlZWU9WeWNGWGJvN1BsUFVJMG9TcXpPanBFR0lRY0tVbVYzUUhsa1FiV3YyUF84bFl4Y3RiZFY5U05qUGthc2FXRlhHWXJYdi1tc1hQbXY1QVBWY1pSckk9)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmctQzVJRkRRaF9YV3FlQTdQSU9Na1ZoZzlZWU9WeWNGWGJvN1BsUFVJMG9TcXpPanBFR0lRY0tVbVYzUUhsa1FiV3YyUF84bFl4Y3RiZFY5U05qUGthc2FXRlhHWXJYdi1tc1hQbXY1QVBWY1pSckk9)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmctQzI2QnpGTjlMR1pVaVBsRFRnNHE5VTZLUHBjS0dKQnJoWTlIVUdpdE5Id09DbGVlOElvbUtGR0h6QjlDWjRMNVdzeTB6bXBuZDdBcjRwWkN0WG5tTE1peWc9PQ==)
        FCI_KEYSTORE_FILE: Encrypted(Z0FBQUFBQmctQzhvWVNFamlOQmFZOS1vbUd1bWtUZWw1R0ZabkFDYlA4Wi1wSXdMUUpHYmlUSFM1VU94VkFubDJZaE1MV1UzYXcxYjR6RXdDNEhwclZmc2VuSlN1bkFld21UaWh3b09fY3QxZnU4ZFBCSnhmMDcwcndMZEtfSFRyay1Xa05KdXdXd04wSURQVXN5WHJkNHhfb1VOTGxzd3NZZzJoZDdUY2FFenU2NXZUOTRZa0RRVmR4aXNyWmZ3dC1MSTBGNEZHTzBtZ1hjLWMwMTJQRk9WRC1ZUGhnVHVRMnQzVmtTQ25XQ255UEZIOG9nM01jSG4yVkg3b1ktWHVoRDNUQnAxeFFZekRPRGlsbjJLLWd0TnFjdDIzLWYyM29ScHBhaGZSS3dpeWVzdndSWm1SaEhLYXV3S2lhQTdzV2pqRXhRVTRKMkx5SjN2NjV6Z2Vhc25fNTFhR0UwUzBQeTNCVkJoaEJOTGZkUmdHWGhTN0lNRUhwQ09XN0gta2NTcTBYaGhLSHJMVF9mSnpkM29ja0I4bEN5TWFseDhsek5iSzhHeTZJQUxaRGNYMVRaSzVZSzNINGJ3T2hLeWM1WDRfNkNEM0dlVDRzcnRYOXZiN19QVk9PYWE0MkZBT0tta1FpSUNHTXh3clkyZy1TOHF6eGtIOHE2Zm9Fb0g0QnEwQW4ycThGcVlTZVdqUVZHRFIwd21NRUIxQnJMLXI3QWZlczNvQ1NqRVFkTW5Mc0FpTHJZX25GR0lyRTNERThJVlM5MVJzR0h2Z0xzb1NVSmNPcS1MekhLTHdMdi1nemNzR1huVzh2aWxzYjFlYnVxNlZYWGljX05QWVREYmpvOWM1dEpieVU2dGVuZkRqSUtoTXRGWXREcEFfQ1FnT2xRbWhpUjR0azhvM2lldUFDMGhkT1ZFc091a2JIU213c01XR2ZCajhrc1haY28xTF9QbGJoZld0MFJyS3NNaVJMeEV5Y3JfNkdWTGpPR0IyYU5KaWZWbkdVYXdxdnlzd1lhLUJNSktsNllXay1iQUZxRlBZd3ZxeUEwcVY0N05JbWFhMGhYZnNQcVdKRmFadm5aMndqS0xnTkpsZ0ZsU3FCS2JfM1VCNS1sVmd3cG93c1VqckZ3dnFVVUQzLW5rRE15cnBBUl9nVEd6aWhpQjA0a3g2UWhGUkQ0dUx3UExVUmxTSUNNQUl1UXo4QkxwdXdiS256aGsyUEdSQW81SjVfeWZ1TkNQNnFYNHA1cV9NTENMbjRfVWJNUnNXOFhkLVpkclhlcU1Ra1o0Qm5XOE1wd3VOdWY3cjVmbEtLSlloV2pvWUN1Zmh0bEFkdE9VSnFFQ2VTTnFjSTVmTkRlU2Zsclo0aWZoRGdfNTdHbFdkTHVpWW0yY1Vmb190bFNMbnJpUnlHMTdJUDUtT2FnaFMyWmJoRnNQdU0ycXNzRVhjb1YtVmU4cUIzYWp2aGNIejVlNmxHWXlXdnR0bVJxSVB4WDF2T3puS1c1eHdaWXVrMzJEUHJKcFFIN3B4MzN5aGRsX3RULWVobHRJenZXOHRYWVFNX3dvQ0hQTE01RmFaVVhNcVEzMHZReTZjbWZ2bTlZMTcwVWFrU1oyX3NrZVEzVHFTa1VPdUh2OGJmYkRMVDQ2U2JuQlRSTUlYbDB1bFdJcHNNM3NRSGNoV0hhWkF1c3RxMzVHd05jV2sxZVhyZmJGNGZVUEtXTVZIS0JaYnJ4UHRNQTNQdVdycGkyOVE3NkVYU3JYcXdTTHBXQ3Y2NzRlSF9MMVhyR2NpbHM0bl9jaG93YUZnY2hNZDdMdmk5Q2xGVWkxMGVDVG5KWFVUc2pHMjd0NmFKYkRXOUR6WWpKUU5FdU5oUFRwMWdiNWNrUF9yTi00OTFUVnJDTDlfQml2N0E0MkU1NjFYZE9fbDJQVDQ4RXJJOG51NEY0WGRqXy1sTUo0VTFCNUdTaFBkbHZQX3JlYWtmaGYtbTNXd1FibFBBTGd1QTViRndGS3BHNU9tMllsN2x2cFotWnBtWlNJSlVaazVsZVJJS1FZWTZQWEt1TDA3RHZWWWNOTVU1ZTZZdHlTNVhJZ2twdlRjV3FDZUFnRGVEQ3pFTWZudFc4VUxweFNBQUV3M201OWRfblpiNUdiY09RMmR0aktBRjNJbGJZdVF3ZVdTbXV4MGZwZkJLZlJFY3dVQjZoUThxTDJzbmpKXzM0NXduLU43THVuVlZ2Zl9FRmNGMFhsLWdDX0FKVVRUcUlsb3BCZFVZT3czb0N4OEc1V3pnWC1ubERpU21uX2N2MHlfWW1KUFRhSmc0bDZMczEtX0tDQ3M4a2VVQ1VxbjZvdm9qc1UwWHUwNUNkWUcycjB1eHBUeU54VXBHTFBwbFphdnZGNmpvXzVHRmUzZV9DRndBZk5sVldraVRoS1dXXzdMWHRpeDN1dUNOTHB2eUJUeW5iSS1OeVVaSUw5S2ZHZlFLUUJfLVZYSmwtQTIxSDF6WXJpY3A3cFlsdlU1Tml2QzNjckJ6dy1VVUhPWFd5WWhPX3pCd3IxRmpXcHJZTkt1eDJabktKckljTGhPQno1NVNsQkNXWWY5aGRmRmpqNlVZbUdzSkJxMmxQTjRUcVNydWk4cEpjamhFZng3UDVraUE0SDN5SlJqcE1ucVZScVUwd0V6TGpYTGNPQlJSU2JrdDE5aFBxTE9JazVnY084VldmSTZDUVAxUnliRklGamZDWFF0aHVOS05aU1lJME0wc2JtNm5yRUZVYUdpeTM3RFNqaWdNVGdYSGxFYV9icTJKWFdNMUNCbWhldlV3anVCQlBzUFR6VlktdmFuaWFZV0diNm40N2h3ejBVNVh5cjVHQkc2TkdkZlZwWFNBRlN2TXJIeW5raldrcVBYd2EtMkJGaGpmcXRuU0Jrd1VMaGtha3kyTFVaUDBNZV9zeVNaMGNKRko3cEg5cFpKWUtjb1k1aXFLWlJFbVJVSFA3VmVxYzdHd2xrRTJpd1p0TWR1QU50WWJmRGc4VVRnTkYxQTlvLXFFMFNqR3J5U08yQVExQ2tCelZVbWk1dXpoa29nTmVuZmYxSkZuX3VfQ2VfeWJLNXp3MUQtTlZ0bDBIQzBjYVMya25obm5uQzZicm9sYlYtYzZMUFE2RWRxcl94NUt4QWI2Wko4V2FXRmtsdllISFJTSXVFandsSGVvTXJVM1NUVE9lSE9OSEhCNEZfYVNoNVFETFNzR3NJMUQyNFJnNnlMTWlNbjZBS2RESlAxMk85dzlSMmc0WnU0RzY1VTdnWkhnPT0=)
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmctQzhvWVNFamlOQmFZOS1vbUd1bWtUZWw1R0ZabkFDYlA4Wi1wSXdMUUpHYmlUSFM1VU94VkFubDJZaE1MV1UzYXcxYjR6RXdDNEhwclZmc2VuSlN1bkFld21UaWh3b09fY3QxZnU4ZFBCSnhmMDcwcndMZEtfSFRyay1Xa05KdXdXd04wSURQVXN5WHJkNHhfb1VOTGxzd3NZZzJoZDdUY2FFenU2NXZUOTRZa0RRVmR4aXNyWmZ3dC1MSTBGNEZHTzBtZ1hjLWMwMTJQRk9WRC1ZUGhnVHVRMnQzVmtTQ25XQ255UEZIOG9nM01jSG4yVkg3b1ktWHVoRDNUQnAxeFFZekRPRGlsbjJLLWd0TnFjdDIzLWYyM29ScHBhaGZSS3dpeWVzdndSWm1SaEhLYXV3S2lhQTdzV2pqRXhRVTRKMkx5SjN2NjV6Z2Vhc25fNTFhR0UwUzBQeTNCVkJoaEJOTGZkUmdHWGhTN0lNRUhwQ09XN0gta2NTcTBYaGhLSHJMVF9mSnpkM29ja0I4bEN5TWFseDhsek5iSzhHeTZJQUxaRGNYMVRaSzVZSzNINGJ3T2hLeWM1WDRfNkNEM0dlVDRzcnRYOXZiN19QVk9PYWE0MkZBT0tta1FpSUNHTXh3clkyZy1TOHF6eGtIOHE2Zm9Fb0g0QnEwQW4ycThGcVlTZVdqUVZHRFIwd21NRUIxQnJMLXI3QWZlczNvQ1NqRVFkTW5Mc0FpTHJZX25GR0lyRTNERThJVlM5MVJzR0h2Z0xzb1NVSmNPcS1MekhLTHdMdi1nemNzR1huVzh2aWxzYjFlYnVxNlZYWGljX05QWVREYmpvOWM1dEpieVU2dGVuZkRqSUtoTXRGWXREcEFfQ1FnT2xRbWhpUjR0azhvM2lldUFDMGhkT1ZFc091a2JIU213c01XR2ZCajhrc1haY28xTF9QbGJoZld0MFJyS3NNaVJMeEV5Y3JfNkdWTGpPR0IyYU5KaWZWbkdVYXdxdnlzd1lhLUJNSktsNllXay1iQUZxRlBZd3ZxeUEwcVY0N05JbWFhMGhYZnNQcVdKRmFadm5aMndqS0xnTkpsZ0ZsU3FCS2JfM1VCNS1sVmd3cG93c1VqckZ3dnFVVUQzLW5rRE15cnBBUl9nVEd6aWhpQjA0a3g2UWhGUkQ0dUx3UExVUmxTSUNNQUl1UXo4QkxwdXdiS256aGsyUEdSQW81SjVfeWZ1TkNQNnFYNHA1cV9NTENMbjRfVWJNUnNXOFhkLVpkclhlcU1Ra1o0Qm5XOE1wd3VOdWY3cjVmbEtLSlloV2pvWUN1Zmh0bEFkdE9VSnFFQ2VTTnFjSTVmTkRlU2Zsclo0aWZoRGdfNTdHbFdkTHVpWW0yY1Vmb190bFNMbnJpUnlHMTdJUDUtT2FnaFMyWmJoRnNQdU0ycXNzRVhjb1YtVmU4cUIzYWp2aGNIejVlNmxHWXlXdnR0bVJxSVB4WDF2T3puS1c1eHdaWXVrMzJEUHJKcFFIN3B4MzN5aGRsX3RULWVobHRJenZXOHRYWVFNX3dvQ0hQTE01RmFaVVhNcVEzMHZReTZjbWZ2bTlZMTcwVWFrU1oyX3NrZVEzVHFTa1VPdUh2OGJmYkRMVDQ2U2JuQlRSTUlYbDB1bFdJcHNNM3NRSGNoV0hhWkF1c3RxMzVHd05jV2sxZVhyZmJGNGZVUEtXTVZIS0JaYnJ4UHRNQTNQdVdycGkyOVE3NkVYU3JYcXdTTHBXQ3Y2NzRlSF9MMVhyR2NpbHM0bl9jaG93YUZnY2hNZDdMdmk5Q2xGVWkxMGVDVG5KWFVUc2pHMjd0NmFKYkRXOUR6WWpKUU5FdU5oUFRwMWdiNWNrUF9yTi00OTFUVnJDTDlfQml2N0E0MkU1NjFYZE9fbDJQVDQ4RXJJOG51NEY0WGRqXy1sTUo0VTFCNUdTaFBkbHZQX3JlYWtmaGYtbTNXd1FibFBBTGd1QTViRndGS3BHNU9tMllsN2x2cFotWnBtWlNJSlVaazVsZVJJS1FZWTZQWEt1TDA3RHZWWWNOTVU1ZTZZdHlTNVhJZ2twdlRjV3FDZUFnRGVEQ3pFTWZudFc4VUxweFNBQUV3M201OWRfblpiNUdiY09RMmR0aktBRjNJbGJZdVF3ZVdTbXV4MGZwZkJLZlJFY3dVQjZoUThxTDJzbmpKXzM0NXduLU43THVuVlZ2Zl9FRmNGMFhsLWdDX0FKVVRUcUlsb3BCZFVZT3czb0N4OEc1V3pnWC1ubERpU21uX2N2MHlfWW1KUFRhSmc0bDZMczEtX0tDQ3M4a2VVQ1VxbjZvdm9qc1UwWHUwNUNkWUcycjB1eHBUeU54VXBHTFBwbFphdnZGNmpvXzVHRmUzZV9DRndBZk5sVldraVRoS1dXXzdMWHRpeDN1dUNOTHB2eUJUeW5iSS1OeVVaSUw5S2ZHZlFLUUJfLVZYSmwtQTIxSDF6WXJpY3A3cFlsdlU1Tml2QzNjckJ6dy1VVUhPWFd5WWhPX3pCd3IxRmpXcHJZTkt1eDJabktKckljTGhPQno1NVNsQkNXWWY5aGRmRmpqNlVZbUdzSkJxMmxQTjRUcVNydWk4cEpjamhFZng3UDVraUE0SDN5SlJqcE1ucVZScVUwd0V6TGpYTGNPQlJSU2JrdDE5aFBxTE9JazVnY084VldmSTZDUVAxUnliRklGamZDWFF0aHVOS05aU1lJME0wc2JtNm5yRUZVYUdpeTM3RFNqaWdNVGdYSGxFYV9icTJKWFdNMUNCbWhldlV3anVCQlBzUFR6VlktdmFuaWFZV0diNm40N2h3ejBVNVh5cjVHQkc2TkdkZlZwWFNBRlN2TXJIeW5raldrcVBYd2EtMkJGaGpmcXRuU0Jrd1VMaGtha3kyTFVaUDBNZV9zeVNaMGNKRko3cEg5cFpKWUtjb1k1aXFLWlJFbVJVSFA3VmVxYzdHd2xrRTJpd1p0TWR1QU50WWJmRGc4VVRnTkYxQTlvLXFFMFNqR3J5U08yQVExQ2tCelZVbWk1dXpoa29nTmVuZmYxSkZuX3VfQ2VfeWJLNXp3MUQtTlZ0bDBIQzBjYVMya25obm5uQzZicm9sYlYtYzZMUFE2RWRxcl94NUt4QWI2Wko4V2FXRmtsdllISFJTSXVFandsSGVvTXJVM1NUVE9lSE9OSEhCNEZfYVNoNVFETFNzR3NJMUQyNFJnNnlMTWlNbjZBS2RESlAxMk85dzlSMmc0WnU0RzY1VTdnWkhnPT0=)
        FCI_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmctQzVJRkRRaF9YV3FlQTdQSU9Na1ZoZzlZWU9WeWNGWGJvN1BsUFVJMG9TcXpPanBFR0lRY0tVbVYzUUhsa1FiV3YyUF84bFl4Y3RiZFY5U05qUGthc2FXRlhHWXJYdi1tc1hQbXY1QVBWY1pSckk9)
        FCI_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmctQzI2QnpGTjlMR1pVaVBsRFRnNHE5VTZLUHBjS0dKQnJoWTlIVUdpdE5Id09DbGVlOElvbUtGR0h6QjlDWjRMNVdzeTB6bXBuZDdBcjRwWkN0WG5tTE1peWc9PQ==)
  shared_config: &shared_config
    max_build_duration: 60
    instance_type: mac_pro
    environment: &shared_config_env
      flutter: 2.5.1
      xcode: latest
      cocoapods: 1.10.2
  shared_scripts:
    - &publish_to_firebase
      name: Publish the app to Firebase App Distribution
      script: |
        apkPath=$(find build -name "*.apk" | head -1)
        if [[ -z ${apkPath} ]]
        then
          echo "No apks were found, skip publishing to Firebase App Distribution"
        else
          echo "Publishing $apkPath to Firebase App Distribution"
          firebase appdistribution:distribute --app $FIREBASE_APPLICATION_ID_ANDROID --groups beta $apkPath
        fi
    - &set_version_string
      name: Setting version string
      script: |
        # get version tag
        version_tag=$(git describe --tags --abbrev=0 --match "*beta*")
        version_tag="$(echo $version_tag | sed 's/^v//g')"
        # set version in pubspec.yaml for showing it in Codemagic
        sed -i -e "s/^version:.*//g" pubspec.yaml
        echo "version: $version_tag" >> pubspec.yaml
        version_tag=$(echo $version_tag | cut -f1 -d "-")
        # Fix CFBundleVersion for iOS
        sed -i -e "s/<string>\$(FLUTTER_BUILD_NAME)<\/string>/<string>${version_tag}<\/string>/g" ios/Runner/Info.plist
    - &set_up_keystore_properties
      name: Setting up android keystore properties
      script: |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_ALIAS_PASSWORD
        keyAlias=$FCI_KEY_ALIAS_USERNAME
        storeFile=/tmp/keystore.keystore
        EOF
    - &set_up_local_properties
      name: Setting up android local properties
      script: |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
    - &set_up_keystore_file
      name: Setting up keystore file
      script: |
        echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
    - &set_up_firebase
      name: Setting up Firebase
      script: |
        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
    - &set_up_env_file
      name: Setting up .env file
      script: |
        #!/bin/sh
        set -e # exit on first failed command set
        cp .env.example .env
        sed -i -e "s/LOGENTRIES_ANDROID_TOKEN=/LOGENTRIES_ANDROID_TOKEN=${LOGENTRIES_ANDROID_TOKEN}/g" .env
        sed -i -e "s/LOGENTRIES_IOS_TOKEN=/LOGENTRIES_IOS_TOKEN=${LOGENTRIES_IOS_TOKEN}/g" .env
        sed -i -e "s/COMMIT_HASH=/COMMIT_HASH=${FCI_COMMIT}/g" .env
    - &set_up_sentry
      name: Setting up Sentry
      script: |
        sed -i -e "s|SENTRY_DSN=|SENTRY_DSN=${SENTRY_DSN}|g" .env
    - &flutter_pub_get
      name: Running flutter pub get and generated code
      script: |
        cd . && flutter packages pub get
        flutter pub run build_runner build
        flutter pub run pigeon --input pigeon/scheme.dart --dart_out lib/app/util/pigeon.dart --objc_header_out ios/Runner/pigeon.h --objc_source_out ios/Runner/pigeon.m --one_language
        # TODO: Remove this when FIL is published as a pub.dev package
        cd voip_flutter_integration
        flutter pub get
        flutter pub run build_runner build
        cd ..
    - &upgrade_gradle_in_device_info
      # TODO: Remove this when the issue has been fixed. Can be tracked here:
      # https://github.com/flutter/flutter/issues/60014
      # https://github.com/flutter/flutter/issues/56683
      name: Upgrade Gradle in device_info plugin
      script: |
        file=$FLUTTER_ROOT/.pub-cache/hosted/pub.dartlang.org/device_info-1.0.0/android/gradle/wrapper/gradle-wrapper.properties
        mkdir -p "$(dirname ${file})"
        echo 'distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.4-all.zip'\
         > $file
    - &flutter_test
      name: Running tests
      script: |
        cd . && flutter test
    - &build_android_for_dev
      name: Building Android for dev and QA purposes
      script: |
        cd . && flutter build apk --release --target=lib/app/main.dart --build-number=$PROJECT_BUILD_NUMBER -v --dart-define BRAND=$BRAND --dart-define SEGMENT_ANDROID_KEY=$SEGMENT_ANDROID_WRITE_KEY
    - &build_ios_for_dev
      name: Building iOS with ad-hoc provisioning profile for dev and QA purposes
      script: |
        pod repo update
        export PATH="$PATH:/Users/builder/programs/flutter/bin/cache/dart-sdk/bin"
        sed -i '' "s/XXXXX/$IOS_TEAM_ID/g" ios/Runner.xcodeproj/project.pbxproj
        cd ios/ && pod install && cd ..
        keychain initialize
        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
        mkdir -p "$PROFILES_HOME"
        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
        echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
        echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
        echo $IOS_EXPORT_OPTIONS | base64 --decode > /tmp/export-options.plist
        keychain add-certificates --certificate /tmp/certificate.p12
        xcode-project use-profiles
        flutter build ipa --release --target=lib/app/main.dart --export-options-plist=/tmp/export-options.plist --build-number=$PROJECT_BUILD_NUMBER --verbose --dart-define BRAND=$BRAND --dart-define SEGMENT_IOS_KEY=$SEGMENT_IOS_WRITE_KEY
    - &set_version_string_to_most_recent_tag
        name: Setting version string
        script: |
          # get version tag
          version_tag=$(git describe --abbrev=0)
          version_tag="$(echo $version_tag | sed 's/^v//g')"
          # set variables in .env file for the app
          sed -i -e "s/BRANCH=/BRANCH=${FCI_BRANCH}/g" .env
          # set version in pubspec.yaml for showing it in Codemagic
          sed -i -e "s/^version:.*//g" pubspec.yaml
          echo "version: $version_tag-$FCI_BRANCH" >> pubspec.yaml
          version_tag=$(echo $version_tag | cut -f1 -d "-")
          # Fix CFBundleVersion for iOS
          sed -i -e "s/<string>\$(FLUTTER_BUILD_NAME)<\/string>/<string>${version_tag}<\/string>/g" ios/Runner/Info.plist
    - &update_ios_signing_for_current_brand
        name: Update iOS project files to sign current brand
        script: |
          #!/usr/bin/env python3
          import os
          import re

          iosTeamId = os.getenv('IOS_TEAM_ID')
          iosBundleId = os.getenv('BUNDLE_ID')

          if not isinstance(iosTeamId, str) or not isinstance(iosBundleId, str):
            raise Exception("IOS_TEAM_ID and BUNDLE_ID environment variables must be set")

          FILE_PATH = "ios/Runner.xcodeproj/project.pbxproj"
          REPLACEMENTS = {
              iosTeamId: [
                  "(DevelopmentTeam = )([A-Z0-9]+)(;)",
                  "(DEVELOPMENT_TEAM = )([A-Z0-9]+)(;)",
              ],
              iosBundleId: [
                  "(PRODUCT_BUNDLE_IDENTIFIER = )(.+)(;)",
              ]
          }

          pbxprojFile = open(FILE_PATH, "r")
          contents = "".join(pbxprojFile.readlines())
          pbxprojFile.close

          for replacement, candidates in REPLACEMENTS.items():
              for candidate in candidates:
                  contents = re.sub(
                      r'' + candidate,
                      r'\1' + replacement + r'\3',
                      contents
                  )


          pbxprojFile = open(FILE_PATH, "w")
          pbxprojFile.write("".join(contents))
          pbxprojFile.close
    - &build_ipa
        name: Build application (.ipa) for iOS
        script: |
          flutter pub get
          pod repo update
          export PATH="$PATH:/Users/builder/programs/flutter/bin/cache/dart-sdk/bin"
          cd ios/ && pod install && cd ..
          keychain initialize
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles
          flutter build ipa --release \
          --target=lib/app/main.dart \
          --export-options-plist=ExportOptions.plist \
          --build-number=$PROJECT_BUILD_NUMBER \
          --verbose \
          --dart-define BRAND=$BRAND \
          --dart-define SEGMENT_IOS_KEY=$SEGMENT_IOS_WRITE_KEY \
    - &update_gitlab_merge_request_with_build_url
        name: Update the Merge Request in Gitlab with a link to this build
        script: |
          #!/usr/bin/env python3
          import os
          import requests
          import re

          MERGE_REQUEST_ID = os.getenv('GITLAB_MERGE_REQUEST_IID')
          GITLAB_API_TOKEN = os.getenv('GITLAB_API_TOKEN')
          BUILD_NUMBER = os.getenv('PROJECT_BUILD_NUMBER')
          PROJECT_ID = os.getenv('FCI_PROJECT_ID')
          BUILD_ID = os.getenv('FCI_BUILD_ID')
          URL = "https://gitlab.wearespindle.com/api/v4/projects/105/merge_requests/{mergeRequestId}".format(mergeRequestId=MERGE_REQUEST_ID)
          TEMPLATE = "[Codemagic: Latest Build ({buildNumber})](https://codemagic.io/app/{projectId}/build/{buildId})"
          HEADERS = { 'Content-Type': 'application/json', 'Private-Token': GITLAB_API_TOKEN }

          message = TEMPLATE.format(buildNumber=BUILD_NUMBER, projectId=PROJECT_ID, buildId=BUILD_ID)
          regex = re.escape(message).replace(BUILD_NUMBER, '\d+').replace(PROJECT_ID, '[^)]+').replace(BUILD_ID, '[^)]+')
          currentDescription = requests.get(URL, headers=HEADERS).json()['description']
          newDescription = re.sub(regex, message, currentDescription)

          requests.put(URL, headers=HEADERS, json={
             'description': newDescription if currentDescription != newDescription else currentDescription + "\r\n\r\n" + message
          })
  brand_config:
    voys_env_vars: &brand_config_voys_env_vars
      BRAND: voys
      BUNDLE_ID: "com.voys.app"
      <<: *private_keys_voys_android_signing
    vialer_env_vars: &brand_config_vialer_env_vars
      BRAND: vialer
      BUNDLE_ID: "com.voipgrid.vialer"
      <<: *private_keys_vialer_android_signing
    staging_env_vars: &brand_config_staging_env_vars
      BRAND: vialerStaging
  ios:
    app_store_connect: &ios_app_store_connect
      api_key: $APP_STORE_CONNECT_PRIVATE_KEY
      key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
      issuer_id: $APP_STORE_CONNECT_ISSUER_ID
      submit_to_testflight: true
  defaults:
    cache: &defaults_cache
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/Library/Caches/CocoaPods
        - $HOME/.gradle/caches
    artifacts: &defaults_artifacts
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log

workflows:
  main:
    name: main
    <<: *shared_config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
      <<: *shared_config_env
      vars:
        <<: *brand_config_voys_env_vars

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
    scripts:
      - *set_up_keystore_properties
      - *set_up_local_properties
      - *set_up_keystore_file
      - *set_up_firebase
      - *set_up_env_file
      - *flutter_pub_get
      - *upgrade_gradle_in_device_info
      - *flutter_test
      - *build_android_for_dev
      - *build_ios_for_dev
      - *set_version_string_to_most_recent_tag
      - name: Set "What to test" for TestFlight
        script: |
          echo '[{"language":"en-US","text":"Main"},{"language":"nl-NL","text":"Main"}]' > release_notes.json
    artifacts: *defaults_artifacts
    publishing:
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: true
      app_store_connect:  *ios_app_store_connect
  merge-requests:
    name: merge requests
    <<: *shared_config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
      <<: *shared_config_env
      vars:
        BRAND: voys
        <<: *brand_config_voys_env_vars
    cache: *defaults_cache
    scripts:
      - *set_up_keystore_properties
      - *set_up_local_properties
      - *set_up_keystore_file
      - *set_up_firebase
      - *set_up_env_file
      - name: Setting version string
        script: |
          # get version tag
          version_tag=$(git describe --abbrev=0)
          version_tag="$(echo $version_tag | sed 's/^v//g')"
          # set variables in .env file for the app
          sed -i -e "s/MERGE_REQUEST=/MERGE_REQUEST=${GITLAB_MERGE_REQUEST_IID}/g" .env
          sed -i -e "s/BRANCH=/BRANCH=${FCI_BRANCH}/g" .env
          # set version in pubspec.yaml for showing it in Codemagic
          sed -i -e "s/^version:.*//g" pubspec.yaml
          echo "version: $version_tag-MR.$GITLAB_MERGE_REQUEST_IID-$FCI_BRANCH" >> pubspec.yaml
          version_tag=$(echo $version_tag | cut -f1 -d "-")
          # Fix CFBundleVersion for iOS
          sed -i -e "s/<string>\$(FLUTTER_BUILD_NAME)<\/string>/<string>${version_tag}<\/string>/g" ios/Runner/Info.plist
      - *flutter_pub_get
      - *upgrade_gradle_in_device_info
      - *flutter_test
      - *build_android_for_dev
      - *build_ios_for_dev
      - name: Set "What to test" for TestFlight
        script: |
          cat << EOF > release_notes.json
          [{"language":"en-US","text":"!${GITLAB_MERGE_REQUEST_IID}"},{"language":"nl-NL","text":"!${GITLAB_MERGE_REQUEST_IID}"}]
          EOF
    artifacts: *defaults_artifacts
    publishing:
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: true
      app_store_connect:  *ios_app_store_connect
      scripts:
        - *update_gitlab_merge_request_with_build_url
  staging:
    name: Staging
    <<: *shared_config
    environment:
      groups:
        - configuration
        - diagnostics
      <<: *shared_config_env
      vars:
        <<: *brand_config_staging_env_vars
    cache: *defaults_cache
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
    scripts:
      - *set_up_keystore_properties
      - *set_up_local_properties
      - *set_up_keystore_file
      - *set_up_firebase
      - *set_up_env_file
      - *set_up_sentry
      - *set_version_string_to_most_recent_tag
      - *flutter_pub_get
      - *upgrade_gradle_in_device_info
      - *flutter_test
      - *build_android_for_dev
      - *build_ios_for_dev
      - name: Set "What to test" for TestFlight
        script: |
          echo '[{"language":"en-US","text":"Alpha"},{"language":"nl-NL","text":"Alpha"}]' > release_notes.json
    artifacts: *defaults_artifacts
  beta-voys:
    name: Voys Beta
    <<: *shared_config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
        - voys_ios_appstore_credentials
      <<: *shared_config_env
      vars:
        <<: *brand_config_voys_env_vars
    cache: *defaults_cache
    artifacts: *defaults_artifacts
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
      tag_patterns:
        - pattern: '*beta*'
          include: true
    scripts:
      - *set_up_keystore_properties
      - *set_up_local_properties
      - *set_up_keystore_file
      - *set_up_firebase
      - *set_up_env_file
      - *set_up_sentry
      - *set_version_string
      - *flutter_pub_get
      - *upgrade_gradle_in_device_info
      #- *flutter_test
      #- *build_android_for_dev
      - *update_ios_signing_for_current_brand
      - *build_ipa
      - name: Set "What to test" for TestFlight
        script:
          echo '[{"language":"en-US","text":"Beta"},{"language":"nl-NL","text":"Beta"}]' > release_notes.json

#    publishing:
#      app_store_connect:  *ios_app_store_connect
#      slack:
#        channel: '#vialer_mobile_ci'
#        notify_on_build_start: true
#      scripts:
#        - *publish_to_firebase
  beta-vialer:
    name: Vialer Beta
    <<: *shared_config
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_ios_appstore_credentials
      <<: *shared_config_env
      vars:
        <<: *brand_config_vialer_env_vars
    cache: *defaults_cache
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
      tag_patterns:
        - pattern: '*beta*'
          include: true
    scripts:
      - *set_up_keystore_properties
      - *set_up_local_properties
      - *set_up_keystore_file
      - *set_up_firebase
      - *set_up_env_file
      - *set_up_sentry
      - *set_version_string
      - *flutter_pub_get
      - *upgrade_gradle_in_device_info
      #- *flutter_test
      #- *build_android_for_dev
      - *update_ios_signing_for_current_brand
      - *build_ipa
      - name: Set "What to test" for TestFlight
        script: |
          echo '[{"language":"en-US","text":"Beta"},{"language":"nl-NL","text":"Beta"}]' > release_notes.json
    artifacts: *defaults_artifacts
    #publishing:
      # app_store_connect:  *ios_app_store_connect
      #slack:
      #channel: '#vialer_mobile_ci'
      #notify_on_build_start: true
      #scripts:
      #- *publish_to_firebase