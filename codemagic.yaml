custom: # Custom properties to make workflows cleaner
  scripts:
    - &set_version_string
      name: Updating versioning information for this build
      script: |
        # get version tag
        version_tag=$(git describe --tags --abbrev=0 --match "*beta*")
        version_tag="$(echo $version_tag | sed 's/^v//g')"
        # set version in pubspec.yaml for showing it in Codemagic
        sed -i -e "s/^version:.*//g" pubspec.yaml
        echo "version: $version_tag" >> pubspec.yaml
        version_tag=$(echo $version_tag | cut -f1 -d "-")
        # Fix CFBundleVersion for iOS
        sed -i -e "s/<string>\$(FLUTTER_BUILD_NAME)<\/string>/<string>${version_tag}<\/string>/g" ios/Runner/Info.plist
    - &set_version_string_for_merge_request
      name: Updating versioning information based on the merge request
      script: |
        # get version tag
        version_tag=$(git describe --abbrev=0)
        version_tag="$(echo $version_tag | sed 's/^v//g')"
        # set variables in .env file for the app
        sed -i -e "s/MERGE_REQUEST=/MERGE_REQUEST=${GITLAB_MERGE_REQUEST_IID}/g" .env
        sed -i -e "s/BRANCH=/BRANCH=${FCI_BRANCH}/g" .env
        # set version in pubspec.yaml for showing it in Codemagic
        sed -i -e "s/^version:.*//g" pubspec.yaml
        echo "version: $version_tag-MR.$GITLAB_MERGE_REQUEST_IID-$FCI_BRANCH" >> pubspec.yaml
        version_tag=$(echo $version_tag | cut -f1 -d "-")
        # Fix CFBundleVersion for iOS
        sed -i -e "s/<string>\$(FLUTTER_BUILD_NAME)<\/string>/<string>${version_tag}<\/string>/g" ios/Runner/Info.plist
    - &set_version_string_to_most_recent_tag
      name: Updating versioning information using the most recent tag
      script: |
        # get version tag
        version_tag=$(git describe --abbrev=0)
        version_tag="$(echo $version_tag | sed 's/^v//g')"
        # set variables in .env file for the app
        sed -i -e "s/BRANCH=/BRANCH=${FCI_BRANCH}/g" .env
        # set version in pubspec.yaml for showing it in Codemagic
        sed -i -e "s/^version:.*//g" pubspec.yaml
        echo "version: $version_tag-$FCI_BRANCH" >> pubspec.yaml
        version_tag=$(echo $version_tag | cut -f1 -d "-")
        # Fix CFBundleVersion for iOS
        sed -i -e "s/<string>\$(FLUTTER_BUILD_NAME)<\/string>/<string>${version_tag}<\/string>/g" ios/Runner/Info.plist
    - &set_up_env_file
      name: Configuring .env file with diagnostics keys
      script: |
        #!/bin/sh
        set -e # exit on first failed command set
        cp .env.example .env
        sed -i -e "s/LOGENTRIES_ANDROID_TOKEN=/LOGENTRIES_ANDROID_TOKEN=${LOGENTRIES_ANDROID_TOKEN}/g" .env
        sed -i -e "s/LOGENTRIES_IOS_TOKEN=/LOGENTRIES_IOS_TOKEN=${LOGENTRIES_IOS_TOKEN}/g" .env
        sed -i -e "s/COMMIT_HASH=/COMMIT_HASH=${FCI_COMMIT}/g" .env
        sed -i -e "s|SENTRY_DSN=|SENTRY_DSN=${SENTRY_DSN}|g" .env
    - &flutter_pub_get
      name: Installing flutter dependencies and generate code
      script: |
        cd . && flutter packages pub get
        flutter pub run build_runner build
        flutter pub run pigeon --input pigeon/scheme.dart --dart_out lib/app/util/pigeon.dart --objc_header_out ios/Runner/pigeon.h --objc_source_out ios/Runner/pigeon.m --one_language
        # TODO: Remove this when FIL is published as a pub.dev package
        cd voip_flutter_integration
        flutter pub get
        flutter pub run build_runner build
        cd ..
    - &flutter_test
      name: Running tests
      script: |
        cd . && flutter test
    - &build_apk
      name: Building application (.apk) for Android
      script: |
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cd . && flutter build apk --release --target=lib/app/main.dart --build-number=$PROJECT_BUILD_NUMBER -v --dart-define BRAND=$BRAND --dart-define SEGMENT_ANDROID_KEY=$SEGMENT_ANDROID_WRITE_KEY
    - &update_ios_signing_for_current_brand
      name: Updating iOS project files to use the appropriate signing information for the current brand
      script: |
        #!/usr/bin/env python3
        import os
        import re

        iosTeamId = os.getenv('IOS_TEAM_ID')
        iosBundleId = os.getenv('BUNDLE_ID')

        if not isinstance(iosTeamId, str) or not isinstance(iosBundleId, str):
          raise Exception("IOS_TEAM_ID and BUNDLE_ID environment variables must be set")

        FILE_PATH = "ios/Runner.xcodeproj/project.pbxproj"
        REPLACEMENTS = {
            iosTeamId: [
                "(DevelopmentTeam = )([A-Z0-9]+)(;)",
                "(DEVELOPMENT_TEAM = )([A-Z0-9]+)(;)",
            ],
            iosBundleId: [
                "(PRODUCT_BUNDLE_IDENTIFIER = )(.+)(;)",
            ]
        }

        pbxprojFile = open(FILE_PATH, "r")
        contents = "".join(pbxprojFile.readlines())
        pbxprojFile.close

        for replacement, candidates in REPLACEMENTS.items():
            for candidate in candidates:
                contents = re.sub(
                    r'' + candidate,
                    r'\1' + replacement + r'\3',
                    contents
                )


        pbxprojFile = open(FILE_PATH, "w")
        pbxprojFile.write("".join(contents))
        pbxprojFile.close
    - &build_ipa
      name: Building application (.ipa) for iOS
      script: |
        flutter pub get
        pod repo update
        export PATH="$PATH:/Users/builder/programs/flutter/bin/cache/dart-sdk/bin"
        cd ios/ && pod install && cd ..
        keychain initialize
        app-store-connect fetch-signing-files $BUNDLE_ID \
        --type IOS_APP_STORE \
        --create
        keychain add-certificates
        xcode-project use-profiles
        flutter build ipa --release \
        --target=lib/app/main.dart \
        --export-options-plist=/Users/builder/export_options.plist \
        --build-number=$PROJECT_BUILD_NUMBER \
        --verbose \
        --dart-define BRAND=$BRAND \
        --dart-define SEGMENT_IOS_KEY=$SEGMENT_IOS_WRITE_KEY \
    - &update_gitlab_merge_request_with_build_url
      name: Updating the Merge Request in Gitlab with a link to this build
      script: |
        #!/usr/bin/env python3
        import os
        import requests
        import re

        MERGE_REQUEST_ID = os.getenv('GITLAB_MERGE_REQUEST_IID')
        GITLAB_API_TOKEN = os.getenv('GITLAB_API_TOKEN')
        BUILD_NUMBER = os.getenv('PROJECT_BUILD_NUMBER')
        PROJECT_ID = os.getenv('FCI_PROJECT_ID')
        BUILD_ID = os.getenv('FCI_BUILD_ID')
        URL = "https://gitlab.wearespindle.com/api/v4/projects/105/merge_requests/{mergeRequestId}".format(mergeRequestId=MERGE_REQUEST_ID)
        TEMPLATE = "[Codemagic: Latest Build ({buildNumber})](https://codemagic.io/app/{projectId}/build/{buildId})"
        HEADERS = { 'Content-Type': 'application/json', 'Private-Token': GITLAB_API_TOKEN }

        message = TEMPLATE.format(buildNumber=BUILD_NUMBER, projectId=PROJECT_ID, buildId=BUILD_ID)
        regex = re.escape(message).replace(BUILD_NUMBER, '\d+').replace(PROJECT_ID, '[^)]+').replace(BUILD_ID, '[^)]+')
        currentDescription = requests.get(URL, headers=HEADERS).json()['description']
        newDescription = re.sub(regex, message, currentDescription)

        requests.put(URL, headers=HEADERS, json={
           'description': newDescription if currentDescription != newDescription else currentDescription + "\r\n\r\n" + message
        })
    - &set_testflight_release_notes_for_beta
      name: Preparing "What to test" for TestFlight
      script: |
        echo '[{"language":"en-US","text":"Beta"},{"language":"nl-NL","text":"Beta"}]' > release_notes.json
    - &set_testflight_release_notes_for_merge_request
      name: Preparing "What to test" for TestFlight
      script: |
        cat << EOF > release_notes.json
        [{"language":"en-US","text":"!${GITLAB_MERGE_REQUEST_IID}"},{"language":"nl-NL","text":"!${GITLAB_MERGE_REQUEST_IID}"}]
        EOF
    - &set_testflight_release_notes_for_main
      name: Set "What to test" for TestFlight
      script: |
        echo '[{"language":"en-US","text":"Main"},{"language":"nl-NL","text":"Main"}]' > release_notes.json
  config: &config # Default configuration that can be applied to all normal workflows
    max_build_duration: 60
    instance_type: mac_pro
    environment: &config_environment
      flutter: 2.5.1
      xcode: latest
      cocoapods: 1.10.2
  brand_config: # Specific configuration that should be applied to a workflow when building for this brand
    voys_env_vars: &brand_config_voys_env_vars
      BRAND: voys
      BUNDLE_ID: "com.voys.app"
    vialer_env_vars: &brand_config_vialer_env_vars
      BRAND: vialer
      BUNDLE_ID: "com.voipgrid.vialer"
    staging_env_vars: &brand_config_staging_env_vars
      BRAND: vialerStaging
  defaults: # Default sections that can be reused between workflows to cover common use-cases
    cache: &defaults_cache
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/Library/Caches/CocoaPods
        - $HOME/.gradle/caches
    artifacts: &defaults_artifacts
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log

workflows:
  main:
    name: main
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
        - voys_keystore_credentials
        - voys_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_voys_env_vars
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
    scripts:
      - *set_up_env_file
      - *flutter_pub_get
      - *flutter_test
      - *build_apk
      - *build_ipa
      - *set_version_string_to_most_recent_tag
      - *set_testflight_release_notes_for_main
    artifacts: *defaults_artifacts
    publishing:
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: true
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
  merge-requests:
    name: merge requests
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
        - voys_keystore_credentials
        - voys_ios_appstore_credentials
      <<: *config_environment
      vars:
        BRAND: voys
        <<: *brand_config_voys_env_vars
    cache: *defaults_cache
    scripts:
      - *set_up_env_file
      - *set_version_string_for_merge_request
      - *flutter_pub_get
      - *flutter_test
      - *build_apk
      - *build_ipa
      - *set_testflight_release_notes_for_merge_request
    artifacts: *defaults_artifacts
    publishing:
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: true
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
      scripts:
        - *update_gitlab_merge_request_with_build_url
  staging:
    name: Staging
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
      <<: *config_environment
      vars:
        <<: *brand_config_staging_env_vars
    cache: *defaults_cache
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
    scripts:
      - *set_up_env_file
      - *set_version_string_to_most_recent_tag
      - *flutter_pub_get
      - *flutter_test
      - *build_apk
      - *build_ipa
    artifacts: *defaults_artifacts
  beta-voys:
    name: Voys Beta
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - voys_android_firebase
        - voys_keystore_credentials
        - voys_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_voys_env_vars
    cache: *defaults_cache
    artifacts: *defaults_artifacts
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
      tag_patterns:
        - pattern: '*beta*'
          include: true
    scripts:
      - *set_up_env_file
      - *set_version_string
      - *flutter_pub_get
      - *flutter_test
      - *build_apk
      - *update_ios_signing_for_current_brand
      - *build_ipa
      - *set_testflight_release_notes_for_beta
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: true
      firebase:
        firebase_token: $FIREBASE_TOKEN
        android:
          app_id: $FIREBASE_APP_ID
          groups:
            - internal-alpha
  beta-vialer:
    name: Vialer Beta
    <<: *config
    environment:
      groups:
        - configuration
        - diagnostics
        - vialer_android_firebase
        - vialer_ios_appstore_credentials
      <<: *config_environment
      vars:
        <<: *brand_config_vialer_env_vars
    cache: *defaults_cache
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: main
          include: true
          source: false
      tag_patterns:
        - pattern: '*beta*'
          include: true
    scripts:
      - *set_up_env_file
      - *set_version_string
      - *flutter_pub_get
      - *flutter_test
      - *build_apk
      - *update_ios_signing_for_current_brand
      - *build_ipa
      - *set_testflight_release_notes_for_beta
    artifacts: *defaults_artifacts
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Beta Testers
      slack:
        channel: '#vialer_mobile_ci'
        notify_on_build_start: true
      firebase:
        firebase_token: $FIREBASE_TOKEN
        android:
          app_id: $FIREBASE_APP_ID
          groups:
            - alpha